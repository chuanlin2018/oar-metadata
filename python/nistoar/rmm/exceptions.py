"""
Exceptions and warnings for the RMM system
"""
from . import RMMSystem, SystemInfoMixin

class SourceSystemMixin(SystemInfoMixin):
    """
    a mixin that stores information about the source system of the error
    """
    def __init__(self, systeminfo):
        self._sysname = systeminfo.system_name or ""
        self._sysabbrev = systeminfo.system_abbrev or ""
        self._subsysname = systeminfo.subsystem_name or systeminfo.system_name
        self._subsysabbrev = \
                       systeminfo.subsystem_abbrev or systeminfo.system_abbrev
        self._sysver = systeminfo.system_version or "x"

    @property 
    def system_version(self): return self._sysver
    @property
    def system_name(self): return self._sysname
    @property
    def system_abbrev(self): return self._sysabbrev
    @property
    def subsystem_name(self): return self._subsysname
    @property
    def subsystem_abbrev(self): return self._subsysabbrev


class RMMWarning(Warning, SourceSystemMixin):
    """
    a base class for warnings generated by the preservation system
    """
    def __init__(self, msg=None, cause=None, sys=None):
        """
        create the base warning.

        :param msg    str:  a specific warning message
        :param cause Exception:  a caught but handled Exception that is the 
                            cause of the warning
        :param sys SystemInfo:  a SystemInfo instance that can provide 
                            information as to the cause of the 
        """
        self.cause = cause
        if not sys or not isinstance(sys, SystemInfoMixin):
            sys = RMMSystem()
        SourceSystemMixin.__init__(self, sys)
        Warning.__init__(self, msg)

class RMMException(Exception, SourceSystemMixin):
    """
    a base class for exceptions occuring in the RMM system
    """
    def __init__(self, msg=None, cause=None, sys=None):
        """
        create the exception.

        :param msg    str:  a specific warning message
        :param cause Exception:  a caught but handled Exception that is the 
                            cause of the warning
        :param sys SystemInfo:  a SystemInfo instance that can provide 
                            information as to the cause of the 
        """
        self.cause = cause
        if not sys or not isinstance(sys, SystemInfoMixin):
            sys = RMMSystem()
        SourceSystemMixin.__init__(self, sys)

        if not msg:
            if cause:
                msg = str(cause)
            else:
                msg = "Unknown {0} System Error".format(self.subsystem_abbrev)
        Exception.__init__(self, msg)
        self.cause = cause

class ConfigurationException(RMMException):
    """
    a class indicating an error in the configuration of the RMM system
    """
    pass

class StateException(RMMException):
    """
    a class indicating that the RMM system or environment is in 
    an uncorrectable state preventing proper processing
    """
    pass

class DatabaseStateError(StateException):
    """
    a class indicating that the RMM database is in 
    an uncorrectable state preventing proper processing.  An example 
    would be detecting multiple records with the same unique key value. 
    """
    pass

